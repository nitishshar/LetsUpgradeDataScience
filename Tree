<!-- Grid/Card Layouts -->
<div class="section-grid" 
     [class.layout-grid]="currentLayout() === FieldLayout.GRID"
     [class.layout-card]="currentLayout() === FieldLayout.CARD"
     *ngIf="currentLayout() !== FieldLayout.EXPANSION">
  <div class="section-card" *ngFor="let section of feedDetailsConfig">
    <div class="section-header">
      <mat-icon>{{section.icon || 'article'}}</mat-icon>
      <h4>{{section.title}}</h4>
    </div>
    <div class="fields-container">
      <app-dynamic-field 
        *ngFor="let field of section.fields"
        [field]="field"
        [form]="getFormGroup(section)"
        [layout]="currentLayout()"
        [showValidation]="showValidation()">
      </app-dynamic-field>
    </div>
  </div>
</div>



// Grid Layout
.section-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(450px, 1fr));
  gap: 24px;
  padding: 16px;

  // Styles specific to Grid layout
  &.layout-grid {
    .section-card {
      background: white;
      border-radius: 8px;
      border: 1px solid rgba(0, 155, 218, 0.1);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);

      .section-header {
        background: #f5f9ff;
        padding: 12px 16px;
        border-bottom: 1px solid rgba(0, 155, 218, 0.1);

        mat-icon {
          color: #009bda;
          font-size: 20px;
          width: 20px;
          height: 20px;
        }

        h4 {
          font-size: 1rem;
          font-weight: 500;
          color: #333;
        }
      }

      .fields-container {
        padding: 16px;
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 16px;
      }
    }
  }

  // Styles specific to Card layout
  &.layout-card {
    .section-card {
      background: white;
      border-radius: 12px;
      box-shadow: 
        0 5px 15px rgba(0, 0, 0, 0.1),
        0 3px 6px rgba(0, 0, 0, 0.08);
      overflow: hidden;
      transform: perspective(1000px) rotateX(0deg);
      transition: all 0.3s ease;
      border: 1px solid rgba(0, 155, 218, 0.1);
      
      &:hover {
        transform: perspective(1000px) rotateX(2deg) translateY(-5px);
        box-shadow: 
          0 8px 20px rgba(0, 0, 0, 0.12),
          0 4px 8px rgba(0, 0, 0, 0.06);
      }

      .section-header {
        background: linear-gradient(135deg, #009bda 0%, #0077a8 100%);
        padding: 20px;
        border-bottom: none;

        mat-icon {
          color: white;
          font-size: 24px;
          width: 24px;
          height: 24px;
          filter: drop-shadow(0 2px 2px rgba(0, 0, 0, 0.2));
        }

        h4 {
          color: white;
          font-size: 1.1rem;
          font-weight: 500;
          text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
        }
      }

      .fields-container {
        padding: 24px;
        display: flex;
        flex-direction: column;
        gap: 20px;
        background: linear-gradient(
          to bottom,
          white,
          rgba(0, 155, 218, 0.02)
        );
      }
    }
  }
}
