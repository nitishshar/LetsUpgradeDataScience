// src/app/components/workflow-state-dialog/workflow-state-dialog.component.ts
import { Component, Inject } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';

interface WorkflowData {
  currentState: string;
}

@Component({
  selector: 'app-workflow-state-dialog',
  templateUrl: './workflow-state-dialog.component.html',
  styleUrls: ['./workflow-state-dialog.component.scss']
})
export class WorkflowStateDialogComponent {
  workflowForm: FormGroup;
 guidelines: string[] = [
    'Ensure all required fields are filled.',
    'Review all comments and feedback.',
    'Verify dependencies are resolved.',
    'Check for any pending approvals.'
  ];
  states = {
    Draft: ['In Review'],
    'In Review': ['Pending Approvals', 'Approved', 'Rejected'],
    'Pending Approvals': ['In Review'],
    Approved: ['Prod Deployed', 'MetaCenter'],
    'Prod Deployed': ['MetaCenter'],
    MetaCenter: ['Prod Deployed']
  };

  constructor(
    private fb: FormBuilder,
    public dialogRef: MatDialogRef<WorkflowStateDialogComponent>,
    @Inject(MAT_DIALOG_DATA) public data: WorkflowData
  ) {
    this.workflowForm = this.fb.group({
      newState: ['', Validators.required],
      comments: ['']
    });
  }

  onSubmit() {
    if (this.workflowForm.valid) {
      this.dialogRef.close(this.workflowForm.value);
    }
  }

  onCancel() {
    this.dialogRef.close();
  }
}



-----
<!-- src/app/components/workflow-state-dialog/workflow-state-dialog.component.html -->
<h2 mat-dialog-title>Change Workflow State</h2>
<form [formGroup]="workflowForm" (ngSubmit)="onSubmit()">
  <mat-dialog-content>
<h3>Guidelines</h3>
    <ul>
      <li *ngFor="let guideline of guidelines">{{ guideline }}</li>
    </ul>
    <mat-form-field appearance="fill">
      <mat-label>New State</mat-label>
      <mat-select formControlName="newState">
        <mat-option *ngFor="let state of states[data.currentState]" [value]="state">
          {{ state }}
        </mat-option>
      </mat-select>
    </mat-form-field>

    <mat-form-field appearance="fill">
      <mat-label>Comments</mat-label>
      <textarea matInput formControlName="comments" placeholder="Enter comments"></textarea>
    </mat-form-field>
  </mat-dialog-content>

  <mat-dialog-actions align="end">
    <button mat-button type="button" (click)="onCancel()">Cancel</button>
    <button mat-raised-button color="primary" type="submit">Change State</button>
  </mat-dialog-actions>
</form>



/* src/app/components/workflow-state-dialog/workflow-state-dialog.component.scss */
/* src/app/components/workflow-state-dialog/workflow-state-dialog.component.scss */
mat-form-field {
  width: 100%;
}

mat-dialog-content {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

h3 {
  margin-bottom: 8px;
}

ul {
  margin: 0 0 16px 0;
  padding-left: 20px;
  list-style-type: disc;
}


// Example usage in another component
import { MatDialog } from '@angular/material/dialog';
import { WorkflowStateDialogComponent } from './components/workflow-state-dialog/workflow-state-dialog.component';

@Component({
  // ...
})
export class SomeComponent {
  constructor(private dialog: MatDialog) {}

  openWorkflowDialog(currentState: string) {
    const dialogRef = this.dialog.open(WorkflowStateDialogComponent, {
      data: { currentState }
    });

    dialogRef.afterClosed().subscribe(result => {
      if (result) {
        console.log('New State:', result.newState);
        console.log('Comments:', result.comments);
        // Handle state change logic here
      }
    });
  }
}







